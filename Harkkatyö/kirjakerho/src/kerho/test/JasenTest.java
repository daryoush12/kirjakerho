package kerho.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kerho.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.25 11:34:20 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class JasenTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi31 */
  @Test
  public void testRekisteroi31() {    // Jasen: 31
    Jasen jasen1 = new Jasen(); 
    assertEquals("From: Jasen line: 33", 0, jasen1.getTunnusNro()); 
    jasen1.rekisteroi(); 
    Jasen jasen2 = new Jasen(); 
    jasen2.rekisteroi(); 
    int n1 = jasen1.getTunnusNro(); 
    int n2 = jasen2.getTunnusNro(); 
    assertEquals("From: Jasen line: 39", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone53 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone53() throws CloneNotSupportedException {    // Jasen: 53
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Mikko Mallikas   | 12345"); 
    Jasen klooni = jasen.clone(); 
    assertEquals("From: Jasen line: 58", jasen.toString(), klooni.toString()); 
    jasen.parse("   4  |  Mikko Makkonen   | 12365"); 
    assertEquals("From: Jasen line: 60", false, klooni.toString().equals(jasen.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta124 */
  @Test
  public void testAseta124() {    // Jasen: 124
    Jasen jasen = new Jasen(); 
    assertEquals("From: Jasen line: 126", null, jasen.aseta(1,"Mikko Mallikas")); 
    assertEquals("From: Jasen line: 127", "Vain numeroita!", jasen.aseta(4,"kissa")); 
    assertEquals("From: Jasen line: 128", null, jasen.aseta(4,"12345")); 
    assertEquals("From: Jasen line: 129", "Vain numeroita!", jasen.aseta(6,"koira")); 
    assertEquals("From: Jasen line: 130", null, jasen.aseta(6,"12345")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString196 */
  @Test
  public void testToString196() {    // Jasen: 196
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Mikko Mallikas  | 030201-111C"); 
    assertEquals("From: Jasen line: 199", true, jasen.toString().startsWith("1|Mikko Mallikas|030201-111C|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse221 */
  @Test
  public void testParse221() {    // Jasen: 221
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Mikko Mallikas  | 030201-111C"); 
    assertEquals("From: Jasen line: 224", 1, jasen.getTunnusNro()); 
    assertEquals("From: Jasen line: 225", true, jasen.toString().startsWith("1|Mikko Mallikas|030201-111C|")); 
    jasen.rekisteroi(); 
    int n = jasen.getTunnusNro(); 
    jasen.parse(""+(n)); 
    jasen.rekisteroi(); 
    assertEquals("From: Jasen line: 230", n+1, jasen.getTunnusNro()); 
  } // Generated by ComTest END
}